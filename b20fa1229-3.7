{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c3604879",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "46f68118",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n",
       "       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\n",
       "       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\n",
       "       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\n",
       "       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,\n",
       "       85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#1\n",
    "np.arange(100)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "24eec480",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[20 21 22 23]\n",
      " [24 25 26 27]\n",
      " [28 29 30 31]]\n"
     ]
    }
   ],
   "source": [
    "#3\n",
    "import numpy as np\n",
    "data1=np.arange(20,32)\n",
    "a=np.reshape(data1,(3,4),'C')\n",
    "print(a)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8ff17f92",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#2\n",
    "np.zeros(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "3aefa59b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1.])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#2\n",
    "np.zeros(10)+1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "6591d5d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([6., 6., 6., 6., 6., 6., 6., 6., 6., 6.])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#2\n",
    "np.zeros(10)+6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "0d41014a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1. 0. 0.]\n",
      " [0. 1. 0.]\n",
      " [0. 0. 1.]]\n"
     ]
    }
   ],
   "source": [
    "#4\n",
    "import numpy as np\n",
    "x = np.eye(3)\n",
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "5b1d19cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1 0 0 0 0]\n",
      " [0 2 0 0 0]\n",
      " [0 0 3 0 0]\n",
      " [0 0 0 4 0]\n",
      " [0 0 0 0 5]]\n"
     ]
    }
   ],
   "source": [
    "#5\n",
    "import numpy as np\n",
    "x = np.diag([1, 2, 3, 4, 5])\n",
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "2e0c77fd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10\n",
      "[4 6]\n",
      "[3 7]\n"
     ]
    }
   ],
   "source": [
    "#6\n",
    "import numpy as np\n",
    "x = np.array([ [1,2], [3,4] ])\n",
    "print (sum(sum(x)))\n",
    "print(x.sum(axis=0))\n",
    "print(x.sum(axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "3694ccda",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[12001735 12745672 13490238 14234334 14978449 16325884 18039762 19753887\n",
      " 21468042 23182024]\n",
      "[166205113       739     14175]\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5e8b499c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#7\n",
    "#Salaries\n",
    "KobeBryant_Salary = [15946875,17718750,19490625,21262500,23034375,24806250,25244493,27849149,30453805,23500000]\n",
    "JoeJohnson_Salary = [12000000,12744189,13488377,14232567,14976754,16324500,18038573,19752645,21466718,23180790]\n",
    "LeBronJames_Salary = [4621800,5828090,13041250,14410581,15779912,14500000,16022500,17545000,19067500,20644400]\n",
    "CarmeloAnthony_Salary = [3713640,4694041,13041250,14410581,15779912,17149243,18518574,19450000,22407474,22458000]\n",
    "DwightHoward_Salary = [4493160,4806720,6061274,13758000,15202590,16647180,18091770,19536360,20513178,21436271]\n",
    "ChrisBosh_Salary = [3348000,4235220,12455000,14410581,15779912,14500000,16022500,17545000,19067500,20644400]\n",
    "ChrisPaul_Salary = [3144240,3380160,3615960,4574189,13520500,14940153,16359805,17779458,18668431,20068563]\n",
    "KevinDurant_Salary = [0,0,4171200,4484040,4796880,6053663,15506632,16669630,17832627,18995624]\n",
    "DerrickRose_Salary = [0,0,0,4822800,5184480,5546160,6993708,16402500,17632688,18862875]\n",
    "DwayneWade_Salary = [3031920,3841443,13041250,14410581,15779912,14200000,15691000,17182000,18673000,15000000]\n",
    "#Games \n",
    "KobeBryant_G = [80,77,82,82,73,82,58,78,6,35]\n",
    "JoeJohnson_G = [82,57,82,79,76,72,60,72,79,80]\n",
    "LeBronJames_G = [79,78,75,81,76,79,62,76,77,69]\n",
    "CarmeloAnthony_G = [80,65,77,66,69,77,55,67,77,40]\n",
    "DwightHoward_G = [82,82,82,79,82,78,54,76,71,41]\n",
    "ChrisBosh_G = [70,69,67,77,70,77,57,74,79,44]\n",
    "ChrisPaul_G = [78,64,80,78,45,80,60,70,62,82]\n",
    "KevinDurant_G = [35,35,80,74,82,78,66,81,81,27]\n",
    "DerrickRose_G = [40,40,40,81,78,81,39,0,10,51]\n",
    "DwayneWade_G = [75,51,51,79,77,76,49,69,54,62]\n",
    "#Points\n",
    "KobeBryant_PTS = [2832,2430,2323,2201,1970,2078,1616,2133,83,782]\n",
    "JoeJohnson_PTS = [1653,1426,1779,1688,1619,1312,1129,1170,1245,1154]\n",
    "LeBronJames_PTS = [2478,2132,2250,2304,2258,2111,1683,2036,2089,1743]\n",
    "CarmeloAnthony_PTS = [2122,1881,1978,1504,1943,1970,1245,1920,2112,966]\n",
    "DwightHoward_PTS = [1292,1443,1695,1624,1503,1784,1113,1296,1297,646]\n",
    "ChrisBosh_PTS = [1572,1561,1496,1746,1678,1438,1025,1232,1281,928]\n",
    "ChrisPaul_PTS = [1258,1104,1684,1781,841,1268,1189,1186,1185,1564]\n",
    "KevinDurant_PTS = [903,903,1624,1871,2472,2161,1850,2280,2593,686]\n",
    "DerrickRose_PTS = [597,597,597,1361,1619,2026,852,0,159,904]\n",
    "DwayneWade_PTS = [2040,1397,1254,2386,2045,1941,1082,1463,1028,1331]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d1be0539",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[15949787 17721257 19493030 21264783 23036418 24808410 25246167 27851360\n",
      " 30453894 23500817]\n",
      "[229306822       653     18448]\n"
     ]
    }
   ],
   "source": [
    "#KobeBryant1\n",
    "import numpy as np\n",
    "data1=[[15946875,17718750,19490625,21262500,23034375,24806250,25244493,27849149,30453805,23500000],[80,77,82,82,73,82,58,78,6,35],[2832,2430,2323,2201,1970,2078,1616,2133,83,782]]\n",
    "arr3=np.array(data1)\n",
    "arr3\n",
    "print(arr3.sum(axis=0))\n",
    "print(arr3.sum(axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a2500519",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 4624357  5830300 13043575 14412966 15782246 14502190 16024245 17547112\n",
      " 19069666 20646212]\n",
      "[141461033       752     21084]\n"
     ]
    }
   ],
   "source": [
    "#JoeJohnson2\n",
    "import numpy as np\n",
    "data2=[[12000000,12744189,13488377,14232567,14976754,16324500,18038573,19752645,21466718,23180790],[82,57,82,79,76,72,60,72,79,80],[1653,1426,1779,1688,1619,1312,1129,1170,1245,1154]]\n",
    "arr3=np.array(data2)\n",
    "arr3\n",
    "print(arr3.sum(axis=0))\n",
    "print(arr3.sum(axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "10a1881d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 4494534  4808245  6063051 13759703 15204175 16649042 18092937 19537732\n",
      " 20514546 21436958]\n",
      "[140546503       727     13693]\n"
     ]
    }
   ],
   "source": [
    "#LeBronJames3\n",
    "import numpy as np\n",
    "data3=[[4621800,5828090,13041250,14410581,15779912,14500000,16022500,17545000,19067500,20644400],[79,78,75,81,76,79,62,76,77,69],[2478,2132,2250,2304,2258,2111,1683,2036,2089,1743]]\n",
    "arr3=np.array(data3)\n",
    "arr3\n",
    "print(arr3.sum(axis=0))\n",
    "print(arr3.sum(axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "52390f21",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 3715842  4695987 13043305 14412151 15781924 17151290 18519874 19451987\n",
      " 22409663 22459006]\n",
      "[151622715       673     17641]\n"
     ]
    }
   ],
   "source": [
    "#CarmeloAnthony4\n",
    "import numpy as np\n",
    "data4=[[3713640,4694041,13041250,14410581,15779912,17149243,18518574,19450000,22407474,22458000],[80,65,77,66,69,77,55,67,77,40],[2122,1881,1978,1504,1943,1970,1245,1920,2112,966]]\n",
    "arr3=np.array(data4)\n",
    "arr3\n",
    "print(arr3.sum(axis=0))\n",
    "print(arr3.sum(axis=1))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b2f4190a",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 4494534  4808245  6063051 13759703 15204175 16649042 18092937 19537732\n",
      " 20514546 21436958]\n",
      "[140546503       727     13693]\n"
     ]
    }
   ],
   "source": [
    "#DwightHoward5\n",
    "import numpy as np\n",
    "data5=[[4493160,4806720,6061274,13758000,15202590,16647180,18091770,19536360,20513178,21436271],[82,82,82,79,82,78,54,76,71,41],[1292,1443,1695,1624,1503,1784,1113,1296,1297,646]]\n",
    "arr3=np.array(data5)\n",
    "arr3\n",
    "print(arr3.sum(axis=0))\n",
    "print(arr3.sum(axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "a930075f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 3349642  4236850 12456563 14412404 15781660 14501515 16023582 17546306\n",
      " 19068860 20645372]\n",
      "[138008113       684     13957]\n"
     ]
    }
   ],
   "source": [
    "#ChrisBosh6\n",
    "import numpy as np\n",
    "data6=[[3348000,4235220,12455000,14410581,15779912,14500000,16022500,17545000,19067500,20644400],[70,69,67,77,70,77,57,74,79,44],[1572,1561,1496,1746,1678,1438,1025,1232,1281,928]]\n",
    "arr3=np.array(data6)\n",
    "arr3\n",
    "print(arr3.sum(axis=0))\n",
    "print(arr3.sum(axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3a9692b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 3145576  3381328  3617724  4576048 13521386 14941501 16361054 17780714\n",
      " 18669678 20070209]\n",
      "[116051459       699     13060]\n"
     ]
    }
   ],
   "source": [
    "#ChrisPaul7\n",
    "import numpy as np\n",
    "data7=[[3144240,3380160,3615960,4574189,13520500,14940153,16359805,17779458,18668431,20068563],[78,64,80,78,45,80,60,70,62,82],[1258,1104,1684,1781,841,1268,1189,1186,1185,1564]]\n",
    "arr3=np.array(data7)\n",
    "arr3\n",
    "print(arr3.sum(axis=0))\n",
    "print(arr3.sum(axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "6ede13d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[     938      938  4172904  4485985  4799434  6055902 15508548 16671991\n",
      " 17835301 18996337]\n",
      "[88510296      639    17343]\n"
     ]
    }
   ],
   "source": [
    "#KevinDurant8\n",
    "import numpy as np\n",
    "data8=[[0,0,4171200,4484040,4796880,6053663,15506632,16669630,17832627,18995624],[35,35,80,74,82,78,66,81,81,27],[903,903,1624,1871,2472,2161,1850,2280,2593,686]]\n",
    "arr3=np.array(data8)\n",
    "arr3\n",
    "print(arr3.sum(axis=0))\n",
    "print(arr3.sum(axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "bba3cd3c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[     637      637      637  4824242  5186177  5548267  6994599 16402500\n",
      " 17632857 18863830]\n",
      "[75445211      460     8712]\n"
     ]
    }
   ],
   "source": [
    "#DerrickRose9\n",
    "import numpy as np\n",
    "data9=[[0,0,0,4822800,5184480,5546160,6993708,16402500,17632688,18862875],[40,40,40,81,78,81,39,0,10,51],[597,597,597,1361,1619,2026,852,0,159,904]]\n",
    "arr3=np.array(data9)\n",
    "arr3\n",
    "print(arr3.sum(axis=0))\n",
    "print(arr3.sum(axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "a6a90fb3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 3034035  3842891 13042555 14413046 15782034 14202017 15692131 17183532\n",
      " 18674082 15001393]\n",
      "[130851106       643     15967]\n"
     ]
    }
   ],
   "source": [
    "#DwayneWad10\n",
    "import numpy as np\n",
    "data10=[[3031920,3841443,13041250,14410581,15779912,14200000,15691000,17182000,18673000,15000000],[75,51,51,79,77,76,49,69,54,62],[2040,1397,1254,2386,2045,1941,1082,1463,1028,1331]]\n",
    "arr3=np.array(data10)\n",
    "arr3\n",
    "print(arr3.sum(axis=0))\n",
    "print(arr3.sum(axis=1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0f7fab1e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
